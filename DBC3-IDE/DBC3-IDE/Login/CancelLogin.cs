///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DBC3_IDE.DBC3_IDE.Login
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CancelLogin recording.
    /// </summary>
    [TestModule("3dae08bd-d2cd-4222-9b88-63f46ad4c675", ModuleType.Recording, 1)]
    public partial class CancelLogin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DBC3_IDE.DBC3_IDERepository repository.
        /// </summary>
        public static global::DBC3_IDE.DBC3_IDERepository repo = global::DBC3_IDE.DBC3_IDERepository.Instance;

        static CancelLogin instance = new CancelLogin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CancelLogin()
        {
            URL = "";
            Proxy = "";
            ChainID = "";
            Path = "";
            Password = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CancelLogin Instance
        {
            get { return instance; }
        }

#region Variables

        string _URL;

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("11f66dd1-4d6b-484e-a4be-a6c27e745f9d")]
        public string URL
        {
            get { return _URL; }
            set { _URL = value; }
        }

        string _Proxy;

        /// <summary>
        /// Gets or sets the value of variable Proxy.
        /// </summary>
        [TestVariable("2ba12ef9-fcd3-404c-b35b-62d1643fc9b8")]
        public string Proxy
        {
            get { return _Proxy; }
            set { _Proxy = value; }
        }

        string _ChainID;

        /// <summary>
        /// Gets or sets the value of variable ChainID.
        /// </summary>
        [TestVariable("b160c3b8-85e9-4608-8436-a9dccf6d2058")]
        public string ChainID
        {
            get { return _ChainID; }
            set { _ChainID = value; }
        }

        string _Path;

        /// <summary>
        /// Gets or sets the value of variable Path.
        /// </summary>
        [TestVariable("3658a300-31cb-4ffa-9503-7c2cf99256aa")]
        public string Path
        {
            get { return _Path; }
            set { _Path = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("631fac5d-27d2-45fe-99c3-9b10f628eda7")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.IconUser' at Center.", repo.DBC3_IDE_DOMAIN.Login.IconUserInfo, new RecordItemIndex(0));
            repo.DBC3_IDE_DOMAIN.Login.IconUser.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            MyTest1.Utils.logoutAndClickLogin(repo.DBC3_IDE_DOMAIN.Login.IconUserInfo, repo.DBC3_IDE_DOMAIN.Login.LoginItemInfo, repo.DBC3_IDE_DOMAIN.TabBar.ItemLogoutInfo, ValueConverter.ArgumentFromString<int>("duration", "0"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$URL' on item 'DBC3_IDE_DOMAIN.Login.TextboxURL'.", repo.DBC3_IDE_DOMAIN.Login.TextboxURLInfo, new RecordItemIndex(4));
            repo.DBC3_IDE_DOMAIN.Login.TextboxURL.Element.SetAttributeValue("Value", URL);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$Proxy' on item 'DBC3_IDE_DOMAIN.Login.TextboxProxy'.", repo.DBC3_IDE_DOMAIN.Login.TextboxProxyInfo, new RecordItemIndex(6));
            repo.DBC3_IDE_DOMAIN.Login.TextboxProxy.Element.SetAttributeValue("Value", Proxy);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$ChainID' on item 'DBC3_IDE_DOMAIN.Login.TextboxChainID'.", repo.DBC3_IDE_DOMAIN.Login.TextboxChainIDInfo, new RecordItemIndex(8));
            repo.DBC3_IDE_DOMAIN.Login.TextboxChainID.Element.SetAttributeValue("Value", ChainID);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.ButtonWallet' at Center.", repo.DBC3_IDE_DOMAIN.Login.ButtonWalletInfo, new RecordItemIndex(10));
            repo.DBC3_IDE_DOMAIN.Login.ButtonWallet.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$Path' on item 'DialogWindow.Text'.", repo.DialogWindow.TextInfo, new RecordItemIndex(12));
            repo.DialogWindow.Text.Element.SetAttributeValue("Text", Path);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(13));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DialogWindow.ButtonOpen' at Center.", repo.DialogWindow.ButtonOpenInfo, new RecordItemIndex(14));
            repo.DialogWindow.ButtonOpen.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$Password' on item 'DBC3_IDE_DOMAIN.Login.TextboxPassword'.", repo.DBC3_IDE_DOMAIN.Login.TextboxPasswordInfo, new RecordItemIndex(16));
            repo.DBC3_IDE_DOMAIN.Login.TextboxPassword.Element.SetAttributeValue("Value", Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.CancelButton' at Center.", repo.DBC3_IDE_DOMAIN.Login.CancelButtonInfo, new RecordItemIndex(18));
            repo.DBC3_IDE_DOMAIN.Login.CancelButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(19));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.IconUser' at Center.", repo.DBC3_IDE_DOMAIN.Login.IconUserInfo, new RecordItemIndex(20));
            repo.DBC3_IDE_DOMAIN.Login.IconUser.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'DBC3_IDE_DOMAIN.Login.LoginItem'", repo.DBC3_IDE_DOMAIN.Login.LoginItemInfo, new ActionTimeout(5000), new RecordItemIndex(22));
            repo.DBC3_IDE_DOMAIN.Login.LoginItemInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(23));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
