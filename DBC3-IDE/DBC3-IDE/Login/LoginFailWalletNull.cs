///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DBC3_IDE.DBC3_IDE.Login
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LoginFailWalletNull recording.
    /// </summary>
    [TestModule("9a64b417-54d9-45f2-b925-a93426edcb93", ModuleType.Recording, 1)]
    public partial class LoginFailWalletNull : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DBC3_IDE.DBC3_IDERepository repository.
        /// </summary>
        public static global::DBC3_IDE.DBC3_IDERepository repo = global::DBC3_IDE.DBC3_IDERepository.Instance;

        static LoginFailWalletNull instance = new LoginFailWalletNull();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LoginFailWalletNull()
        {
            URL = "";
            Proxy = "";
            ChainID = "";
            Password = "";
            Login_failed = "Login failed";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LoginFailWalletNull Instance
        {
            get { return instance; }
        }

#region Variables

        string _URL;

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("f1924bdd-fce0-4418-8850-04ec4d282ce9")]
        public string URL
        {
            get { return _URL; }
            set { _URL = value; }
        }

        string _Proxy;

        /// <summary>
        /// Gets or sets the value of variable Proxy.
        /// </summary>
        [TestVariable("58b95f40-ab5c-44cf-b9fe-51acc8bbd012")]
        public string Proxy
        {
            get { return _Proxy; }
            set { _Proxy = value; }
        }

        string _ChainID;

        /// <summary>
        /// Gets or sets the value of variable ChainID.
        /// </summary>
        [TestVariable("4e20e49f-0f5d-4647-8a3f-b428e8e7fd66")]
        public string ChainID
        {
            get { return _ChainID; }
            set { _ChainID = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("00a91967-e9cb-4005-a092-aba8c2d0a673")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _Login_failed;

        /// <summary>
        /// Gets or sets the value of variable Login_failed.
        /// </summary>
        [TestVariable("7ff2c895-cba5-4504-b414-b3174dfe4e12")]
        public string Login_failed
        {
            get { return _Login_failed; }
            set { _Login_failed = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.IconUser' at Center.", repo.DBC3_IDE_DOMAIN.Login.IconUserInfo, new RecordItemIndex(0));
            repo.DBC3_IDE_DOMAIN.Login.IconUser.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            MyTest1.Utils.logoutAndClickLogin(repo.DBC3_IDE_DOMAIN.Login.IconUserInfo, repo.DBC3_IDE_DOMAIN.Login.LoginItemInfo, repo.DBC3_IDE_DOMAIN.TabBar.ItemLogoutInfo, ValueConverter.ArgumentFromString<int>("duration", "0"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$URL' on item 'DBC3_IDE_DOMAIN.Login.TextboxURL'.", repo.DBC3_IDE_DOMAIN.Login.TextboxURLInfo, new RecordItemIndex(4));
            repo.DBC3_IDE_DOMAIN.Login.TextboxURL.Element.SetAttributeValue("Value", URL);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$Proxy' on item 'DBC3_IDE_DOMAIN.Login.TextboxProxy'.", repo.DBC3_IDE_DOMAIN.Login.TextboxProxyInfo, new RecordItemIndex(6));
            repo.DBC3_IDE_DOMAIN.Login.TextboxProxy.Element.SetAttributeValue("Value", Proxy);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$ChainID' on item 'DBC3_IDE_DOMAIN.Login.TextboxChainID'.", repo.DBC3_IDE_DOMAIN.Login.TextboxChainIDInfo, new RecordItemIndex(8));
            repo.DBC3_IDE_DOMAIN.Login.TextboxChainID.Element.SetAttributeValue("Value", ChainID);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$Password' on item 'DBC3_IDE_DOMAIN.Login.TextboxPassword'.", repo.DBC3_IDE_DOMAIN.Login.TextboxPasswordInfo, new RecordItemIndex(10));
            repo.DBC3_IDE_DOMAIN.Login.TextboxPassword.Element.SetAttributeValue("Value", Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DBC3_IDE_DOMAIN.Login.LoginButon' at Center.", repo.DBC3_IDE_DOMAIN.Login.LoginButonInfo, new RecordItemIndex(12));
            repo.DBC3_IDE_DOMAIN.Login.LoginButon.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(13));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Login_failed) on item 'DBC3_IDE_DOMAIN.Login.MessageErrorLogin'.", repo.DBC3_IDE_DOMAIN.Login.MessageErrorLoginInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.DBC3_IDE_DOMAIN.Login.MessageErrorLoginInfo, "InnerText", Login_failed);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
