///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DBC3_IDE.DNCWareNetwork
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DeleteFromC1terminate recording.
    /// </summary>
    [TestModule("0fc1128f-ca61-417c-a59f-6185e70c9c18", ModuleType.Recording, 1)]
    public partial class DeleteFromC1terminate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DBC3_IDE.DBC3_IDERepository repository.
        /// </summary>
        public static global::DBC3_IDE.DBC3_IDERepository repo = global::DBC3_IDE.DBC3_IDERepository.Instance;

        static DeleteFromC1terminate instance = new DeleteFromC1terminate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DeleteFromC1terminate()
        {
            NewIDTransaction = "123123123";
            SearchC1terminate = "c1domain";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DeleteFromC1terminate Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewIDTransaction;

        /// <summary>
        /// Gets or sets the value of variable NewIDTransaction.
        /// </summary>
        [TestVariable("6ed891e6-2a53-4da1-9b55-2ca94771e1ba")]
        public string NewIDTransaction
        {
            get { return _NewIDTransaction; }
            set { _NewIDTransaction = value; }
        }

        string _SearchC1terminate;

        /// <summary>
        /// Gets or sets the value of variable SearchC1terminate.
        /// </summary>
        [TestVariable("538b25c0-59c3-4a52-87e1-0d5e801b309d")]
        public string SearchC1terminate
        {
            get { return _SearchC1terminate; }
            set { _SearchC1terminate = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$SearchC1terminate' on item 'DNCWAREBlockChain3.HomePage.SearchText'.", repo.DNCWAREBlockChain3.HomePage.SearchTextInfo, new RecordItemIndex(0));
            repo.DNCWAREBlockChain3.HomePage.SearchText.Element.SetAttributeValue("Value", SearchC1terminate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DNCWAREBlockChain3.HomePage.SearchButton' at Center.", repo.DNCWAREBlockChain3.HomePage.SearchButtonInfo, new RecordItemIndex(2));
            repo.DNCWAREBlockChain3.HomePage.SearchButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DNCWAREBlockChain3.HomePage.C1domainPage.ButtonNewTransaction' at Center.", repo.DNCWAREBlockChain3.HomePage.C1domainPage.ButtonNewTransactionInfo, new RecordItemIndex(4));
            repo.DNCWAREBlockChain3.HomePage.C1domainPage.ButtonNewTransaction.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$NewIDTransaction' on item 'DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.TextBoxID'.", repo.DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.TextBoxIDInfo, new RecordItemIndex(6));
            repo.DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.TextBoxID.Element.SetAttributeValue("TagValue", NewIDTransaction);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.SubmitButton' at Center.", repo.DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.SubmitButtonInfo, new RecordItemIndex(8));
            repo.DNCWAREBlockChain3.HomePage.C1domainPage.PopupNewTransaction.SubmitButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
